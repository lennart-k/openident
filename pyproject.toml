[tool.black]
target-version = ["py39"]

[tool.isort]
profile = "black"
force_sort_within_sections = true
src_paths = ["openident", "test"]
known_first_party = ["openident", "tests"]
forced_separate = ["tests"]
combine_as_imports = true

[tool.pylint.MASTER]
ignore = ["tests", "openident/persistence/sql"]
disable = [
    "missing-function-docstring",
    "missing-module-docstring",
    "missing-class-docstring",
    "duplicate-code",
    # Python 3.10
    "consider-alternative-union-syntax",
]
init-hook = 'from pylint.config.find_default_config_files import find_default_config_files; from pathlib import Path; import sys; sys.path.append(str(Path(Path(list(find_default_config_files())[0]).parent, "pylint/plugins")))'
load-plugins = [
    "pylint.extensions.code_style",
    "pylint.extensions.typing",
    "pylint_strict_informational",
]

[tool.pylint.BASIC]
good-names = ["_", "e", "id"]

[tool.pylint.REPORTS]
score = false

[tool.pylint.TYPECHECK]
ignored-classes = [
    "_CountingAttr",  # for attrs
]

[tool.pylint.FORMAT]
expected-line-ending-format = "LF"

[tool.pylint.TYPING]
py-version = "3.9"
runtime-typing = false

[tool.pytest.ini_options]
testpaths = ["tests"]
norecursedirs = [".git"]

[tool.mypy]
python_version = "3.9"
show_error_codes = true
follow_imports = "silent"
ignore_missing_imports = true
strict_equality = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unreachable = true
plugins = ["sqlalchemy.ext.mypy.plugin"]
